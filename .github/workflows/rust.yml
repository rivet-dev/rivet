name: Rust CI

on:
  pull_request:
    paths-ignore:
      - 'frontend/**'
  push:
    branches:
      - main

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    # Enable fail-fast behavior
    shell: bash -e {0}

env:
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "--cfg tokio_unstable"
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  # clippy:
  #   name: Clippy
  #   runs-on: depot-ubuntu-24.04
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #         components: clippy

  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         shared-key: "rust-ci"
  #         cache-on-failure: true

  #     - name: Run clippy
  #       run: cargo clippy --all-targets --all-features -- -W warnings

  check:
    name: Check
    runs-on: depot-ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-on-failure: true

      - name: Check
        run: cargo check --all-targets --all-features
        env:
          # Deny warnings
          RUSTFLAGS: --cfg tokio_unstable -D warnings

  # test:
  #   name: Test
  #   runs-on: depot-ubuntu-24.04
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #
  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         # Share cache across all Rust jobs
  #         shared-key: "rust-ci"
  #         # Save cache even if the build fails
  #         cache-on-failure: true
  #         # Only save cache on main branch to avoid cache pollution from PRs
  #
  #     - name: Run tests
  #       run: cargo test --verbose
  #
  # deny:
  #   name: Deny
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: cargo deny
  #       uses: EmbarkStudios/cargo-deny-action@v1
  #       with:
  #         rust-version: "1.88.0"
