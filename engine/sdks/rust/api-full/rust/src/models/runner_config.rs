/*
 * rivet-api-public
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.8.2
 * Contact: developer@rivet.gg
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunnerConfig {
    #[serde(rename = "normal")]
    pub normal: serde_json::Value,
    #[serde(rename = "serverless")]
    pub serverless: Box<models::RunnerConfigKindOneOf1Serverless>,
    #[serde(rename = "metadata", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Option<serde_json::Value>>,
}

impl RunnerConfig {
    pub fn new(normal: serde_json::Value, serverless: models::RunnerConfigKindOneOf1Serverless) -> RunnerConfig {
        RunnerConfig {
            normal,
            serverless: Box::new(serverless),
            metadata: None,
        }
    }
}

